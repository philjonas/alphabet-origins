{"version":3,"sources":["store/constants.ts","store/reducers.ts","store/index.ts","components/Divider/index.tsx","components/LogogramBox/index.tsx","components/EtymologyCard/index.tsx","store/types.ts","components/HieroglyphicsHeader/index.tsx","components/EtymologyPage/index.tsx","store/actions.ts","components/WriteHieroglyphics/index.tsx","components/App/index.tsx","index.tsx"],"names":["SET_ID","SET_SEARCH","initialState","logograms","logograms_data","id","letterMappings","latin_letters_mapping","search","store","createStore","state","action","type","Object","assign","payload","Divider","props","className","barrier","defaultProps","LogogramBox","isSmaller","symbol","legend","EtymologyCard","text","hieroglyph","phoenician","greek","latin","meaning","toUpperCase","slice","Language","HieroglyphicsHeader","connect","logogramComponents","map","logo","idx","linkTo","toString","to","mapDispatchToProps","setId","EtymologyPage","find","x","useParams","idNumber","parseInt","useEffect","translateText","languageKey","results","result","obj","letter","PHOEN","HIERO","setSearch","WriteHieroglyphics","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","toLowerCase","split","forEach","entries","key","value","placeholder","onChange","event","target","onClick","GREEK","LATIN","App","exact","path","href","rel","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1164d92a.chunk.js","sourcesContent":["\r\nexport const SET_ID = 'setId'\r\nexport const SET_SEARCH = 'setSearch'","import logograms_data from '../languages/phoenician.json'\r\nimport latin_letters_mapping from '../languages/latin_id.json'\r\nimport { StateType, ActionType } from './types'\r\nimport { SET_ID, SET_SEARCH } from './constants'\r\n\r\nexport const initialState: StateType = {\r\n    logograms: logograms_data,\r\n    id: -1,\r\n    letterMappings: latin_letters_mapping,\r\n    search: ''\r\n};\r\n\r\nexport const rootReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (action.type === SET_ID) {\r\n        return Object.assign({}, state, {\r\n            id: action.payload,\r\n        });\r\n    }\r\n    if (action.type === SET_SEARCH) {\r\n        return Object.assign({}, state, {\r\n            search: action.payload,\r\n        });\r\n    }\r\n    return state\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import * as React from 'react';\r\nimport './style.css';\r\n\r\ninterface DividerProps {\r\n    barrier?: string,\r\n}\r\n\r\nexport const Divider: React.FunctionComponent<DividerProps> = (props) => {\r\n    return <div className=\"divider\">{props.barrier}</div>;\r\n}\r\n\r\nDivider.defaultProps = {\r\n    barrier: '...',\r\n}\r\n","import * as React from 'react';\r\nimport './style.css';\r\n\r\ninterface LogogramBoxProps {\r\n    symbol?: string | null,\r\n    legend?: string,\r\n    isSmaller?:boolean,\r\n}\r\n\r\nexport const LogogramBox: React.FunctionComponent<LogogramBoxProps> = (props) => {\r\n    return <div className=\"container-logogram\">\r\n        <div className={props.isSmaller ? \"smaller-symbol\":\"symbol\"}>{props.symbol}</div>\r\n        <div className=\"legend\">{props.legend}</div>\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {Divider} from '../Divider/index';\r\nimport {LogogramBox} from '../LogogramBox/index';\r\nimport './style.css';\r\nimport { LogogramType } from '../../store/types'\r\n\r\nconst capitalise = (text?: string): string => text ? text[0].toUpperCase() +\r\n    text.slice(1) : ''\r\nexport const EtymologyCard: React.FunctionComponent<LogogramType> = (props) => {\r\n    const { hieroglyph, phoenician, greek, latin, meaning } = props;\r\n    return <div className=\"logo-container\">\r\n        <div className=\"letter-container\">\r\n            <LogogramBox symbol={hieroglyph} legend=\"Egyptian\" isSmaller />\r\n            <Divider />\r\n            <LogogramBox symbol={phoenician} legend=\"Phoenician\" />\r\n            <Divider />\r\n            <LogogramBox symbol={greek} legend=\"Greek\" />\r\n            {latin && <Divider />}\r\n            {latin && <LogogramBox symbol={latin} legend=\"Latin\" />}\r\n        </div>\r\n        <h2 className=\"letter-meaning\">{capitalise(meaning)}</h2>\r\n    </div>;\r\n}\r\n\r\nEtymologyCard.defaultProps = {\r\n    hieroglyph: 'ìÉæ',\r\n    phoenician: 'ê§Ä',\r\n    greek: 'ŒëŒ±',\r\n    latin: 'Aa',\r\n    meaning: 'ox, head of cattle',\r\n}","export interface LogogramType {\r\n    id?: number\r\n    phoenician?: string\r\n    meaning?: string\r\n    hieroglyph?: string\r\n    greek?: string\r\n    latin?: string | null\r\n}\r\n\r\nexport interface StateType {\r\n    logograms: LogogramType[]\r\n    id: number\r\n    letterMappings: Record<string, number>\r\n    search: string\r\n}\r\n\r\nexport interface ActionType {\r\n    type: string\r\n    payload: Object\r\n}\r\n\r\nexport interface ParamType {\r\n    id?: string\r\n}\r\n\r\nexport enum Language {\r\n    LATIN = 'latin',\r\n    GREEK = 'greek',\r\n    PHOEN = 'phoenician',\r\n    HIERO = 'hieroglyph'\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { LogogramType, StateType } from '../../store/types';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    const { logograms } = state\r\n    return { logograms }\r\n}\r\n\r\nexport const HieroglyphicsTemplate = ({ logograms }: { logograms: LogogramType[] }) => {\r\n    const logogramComponents = logograms.map((logo, idx) => {\r\n        const linkTo = '/hieroglyphics/' + logo.id?.toString()\r\n        return (\r\n            <Link key={idx} to={linkTo} className=\"hieroglyph-link\">\r\n                <span className=\"hieroglyphics-span\">{logo.hieroglyph}</span>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"hieroglyphics-container\">{logogramComponents}</div>\r\n    );\r\n}\r\n\r\nexport const HieroglyphicsHeader = connect(mapStateToProps)(HieroglyphicsTemplate);","import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { EtymologyCard } from '../EtymologyCard'\r\nimport { HieroglyphicsHeader } from '../HieroglyphicsHeader'\r\nimport { LogogramType, ParamType, StateType } from '../../store/types'\r\nimport { setId } from \"../../store/actions\";\r\n\r\nconst mapDispatchToProps = {\r\n    setId\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    const { id, logograms } = state\r\n    return { logo: logograms.find(x => x.id === id) }\r\n}\r\n\r\nexport const EtymologyPageTemplate = ({ logo, setId }: { logo?: LogogramType, setId: any }) => {\r\n    let { id }: ParamType = useParams()\r\n    const idNumber = id ? parseInt(id) : -1\r\n    useEffect(() => {\r\n        setId(idNumber)\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <HieroglyphicsHeader />\r\n            <EtymologyCard {...logo} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport const EtymologyPage = connect(mapStateToProps, mapDispatchToProps)(EtymologyPageTemplate);","import { ActionType } from './types'\r\nimport { SET_ID, SET_SEARCH } from './constants'\r\n\r\n\r\nexport const setId = (payload: number): ActionType => {\r\n    return { type: SET_ID, payload }\r\n}\r\n\r\nexport const setSearch = (payload: string): ActionType => {\r\n    return { type: SET_SEARCH, payload }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { LogogramType, StateType, Language } from '../../store/types'\r\nimport { setSearch } from \"../../store/actions\";\r\nimport './style.css';\r\n\r\nconst translateText = (languageKey: Language, results: number[], logograms: LogogramType[]): React.ReactNode => {\r\n    return (results.map((result, idx) => {\r\n        const obj = logograms.find(x => x.id === result)\r\n        const letter = languageKey === Language.PHOEN || languageKey === Language.HIERO ? obj![languageKey] : obj![languageKey]![0]\r\n        return <div key={idx}><Link to={`/hieroglyphics/${obj!.id}`}>{letter}</Link></div>\r\n    })\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setSearch\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    const { letterMappings, logograms, search } = state\r\n    return { letterMappings, logograms, search }\r\n}\r\n\r\nexport const WriteHieroglyphicsTemplate = ({ letterMappings, logograms, search, setSearch }: { letterMappings: Record<string, number>, logograms: LogogramType[], search: string, setSearch:any }) => {\r\n    const [searchTerm, setSearchTerm] = useState(search);\r\n    const s: number[] = []\r\n    const [searchResults, setSearchResults] = useState(s);\r\n    const handleChange = (event: React.InputHTMLAttributes<HTMLInputElement>) => {\r\n        setSearchTerm((event as any).target.value);\r\n    };\r\n    const clearSearch = () => {setSearchTerm('')}\r\n    useEffect(() => {\r\n        let results: number[] = []\r\n        const searchList = searchTerm.toLowerCase().split('')\r\n        searchList.forEach((letter: string) => {\r\n            Object.entries(letterMappings).find(\r\n                ([key, value]) => { \r\n                    if (key === letter){ \r\n                        results = [...results, value] \r\n                    }\r\n                }\r\n            )\r\n        });\r\n        setSearchResults(results)\r\n        setSearch(searchTerm)\r\n    }, [searchTerm, letterMappings])\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <p className=\"disclaimer\">Disclaimer: This is a fun little gimmick, not an accurate representation of how Ancient Latin, Greek, Phoenician and Egyptian Hieroglyphics were written.</p>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={searchTerm}\r\n                onChange={handleChange}\r\n            />\r\n            <button onClick={clearSearch}>Clear Input</button>\r\n            <div className=\"search-results\">HIEROGLYPHICS: <div className=\"letter-zoom\">{translateText(Language.HIERO, searchResults, logograms)}</div></div>\r\n            <div className=\"search-results\">PHOENICIAN: <div className=\"letter-zoom\">{translateText(Language.PHOEN, searchResults, logograms)}</div></div>\r\n            <div className=\"search-results\">GREEK: {translateText(Language.GREEK, searchResults, logograms)}</div>\r\n            <div className=\"search-results\">LATIN: {translateText(Language.LATIN, searchResults, logograms)}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const WriteHieroglyphics = connect(mapStateToProps, mapDispatchToProps)(WriteHieroglyphicsTemplate);","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport '../../languages/languages.css';\r\nimport { EtymologyPage } from '../EtymologyPage'\r\nimport { WriteHieroglyphics } from '../WriteHieroglyphics'\r\nimport './style.css';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <h1 className=\"page-title\">The Hieroglyphic Origins of the Greek and Latin Alphabets</h1>\r\n        <div className=\"link-container\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/write\">Write in Hieroglyphics and Phoenician</Link>\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/write\">\r\n            <WriteHieroglyphics />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <EtymologyPage />\r\n          </Route>\r\n          <Route exact path=\"/hieroglyphics/:id\">\r\n            <EtymologyPage />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <EtymologyPage />\r\n          </Route>\r\n        </Switch>\r\n        <p className=\"etymology-info\">Information taken from <a href=\"https://en.wikipedia.org/wiki/Phoenician_alphabet\" target=\"_blank\" rel=\"noreferrer\"> Wikipedia's Phoenician Alphabet</a> page</p>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store/index';\r\nimport './index.css';\r\nimport { App } from './components/App';\r\n\r\n// TODO: remove this, just exposing the store to the console for a bit ;)//////\r\n(window as any).store = store;\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}